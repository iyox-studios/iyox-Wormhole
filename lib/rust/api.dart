// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.8.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:iyox_wormhole/rust/frb_generated.dart';
import 'package:iyox_wormhole/rust/wormhole/types/error_types.dart';
import 'package:iyox_wormhole/rust/wormhole/types/events.dart';
import 'package:iyox_wormhole/rust/wormhole/types/t_update.dart';
import 'package:iyox_wormhole/rust/wormhole/types/value.dart';

void initBackend({required String tempFilePath}) =>
    RustLib.instance.api.crateApiInitBackend(tempFilePath: tempFilePath);

Stream<TUpdate> sendFiles(
        {required List<String> filePaths,
        required String name,
        required int codeLength,
        required ServerConfig serverConfig}) =>
    RustLib.instance.api.crateApiSendFiles(
        filePaths: filePaths,
        name: name,
        codeLength: codeLength,
        serverConfig: serverConfig);

Stream<TUpdate> requestFile(
        {required String code,
        required String storageFolder,
        required ServerConfig serverConfig}) =>
    RustLib.instance.api.crateApiRequestFile(
        code: code, storageFolder: storageFolder, serverConfig: serverConfig);

String defaultRendezvousUrl() =>
    RustLib.instance.api.crateApiDefaultRendezvousUrl();

String defaultTransitUrl() => RustLib.instance.api.crateApiDefaultTransitUrl();

class ServerConfig {
  final String rendezvousUrl;
  final String transitUrl;

  const ServerConfig({
    required this.rendezvousUrl,
    required this.transitUrl,
  });

  @override
  int get hashCode => rendezvousUrl.hashCode ^ transitUrl.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ServerConfig &&
          runtimeType == other.runtimeType &&
          rendezvousUrl == other.rendezvousUrl &&
          transitUrl == other.transitUrl;
}
