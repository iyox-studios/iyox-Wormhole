--- a/rust_builder/cargokit/run_build_tool.sh	2025-03-08 16:48:22.126806493 +0100
+++ b/rust_builder/cargokit/run_build_tool.sh	2025-03-11 20:53:55.386696762 +0100
@@ -42,52 +42,15 @@
 }
 EOF
 
-# Create alias for `shasum` if it does not exist and `sha1sum` exists
-if ! [ -x "$(command -v shasum)" ] && [ -x "$(command -v sha1sum)" ]; then
-  shopt -s expand_aliases
-  alias shasum="sha1sum"
-fi
-
-# Dart run will not cache any package that has a path dependency, which
-# is the case for our build_tool_runner. So instead we precompile the package
-# ourselves.
-# To invalidate the cached kernel we use the hash of ls -LR of the build_tool
-# package directory. This should be good enough, as the build_tool package
-# itself is not meant to have any path dependencies.
-
-if [[ "$OSTYPE" == "darwin"* ]]; then
-  PACKAGE_HASH=$(ls -lTR "$BUILD_TOOL_PKG_DIR" | shasum)
-else
-  PACKAGE_HASH=$(ls -lR --full-time "$BUILD_TOOL_PKG_DIR" | shasum)
-fi
-
-PACKAGE_HASH_FILE=".package_hash"
-
-if [ -f "$PACKAGE_HASH_FILE" ]; then
-    EXISTING_HASH=$(cat "$PACKAGE_HASH_FILE")
-    if [ "$PACKAGE_HASH" != "$EXISTING_HASH" ]; then
-        rm "$PACKAGE_HASH_FILE"
-    fi
-fi
-
-# Run pub get if needed.
-if [ ! -f "$PACKAGE_HASH_FILE" ]; then
-    "$DART" pub get --no-precompile
-    "$DART" compile kernel bin/build_tool_runner.dart
-    echo "$PACKAGE_HASH" > "$PACKAGE_HASH_FILE"
-fi
-
 set +e
 
-"$DART" bin/build_tool_runner.dill "$@"
+@build_tool_runner@ "$@"
 
 exit_code=$?
 
 # 253 means invalid snapshot version.
 if [ $exit_code == 253 ]; then
-  "$DART" pub get --no-precompile
-  "$DART" compile kernel bin/build_tool_runner.dart
-  "$DART" bin/build_tool_runner.dill "$@"
+  @build_tool_runner@ "$@"
   exit_code=$?
 fi
 
